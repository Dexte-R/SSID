/** \file
 *  This C header file was generated by $ANTLR version 3.4
 *
 *     -  From the grammar source file : python3.g
 *     -                            On : 2012-10-15 01:45:31
 *     -                for the parser : python3ParserParser
 *
 * Editing it, at least manually, is not wise.
 *
 * C language generator and runtime by Jim Idle, jimi|hereisanat|idle|dotgoeshere|ws.
 *
 *
 * The parser 
python3Parser

has the callable functions (rules) shown below,
 * which will invoke the code for the associated rule in the source grammar
 * assuming that the input stream is pointing to a token/text stream that could begin
 * this rule.
 *
 * For instance if you call the first (topmost) rule in a parser grammar, you will
 * get the results of a full parse, but calling a rule half way through the grammar will
 * allow you to pass part of a full token stream to the parser, such as for syntax checking
 * in editors and so on.
 *
 * The parser entry points are called indirectly (by function pointer to function) via
 * a parser context typedef ppython3Parser, which is returned from a call to python3ParserNew().
 *
 * The methods in ppython3Parser are  as follows:
 *
 *  - 
 python3Parser_interactive_input_return
      ppython3Parser->interactive_input(ppython3Parser)
 *  - 
 python3Parser_file_input_return
      ppython3Parser->file_input(ppython3Parser)
 *  - 
 python3Parser_eval_input_return
      ppython3Parser->eval_input(ppython3Parser)
 *  - 
 python3Parser_classdef_return
      ppython3Parser->classdef(ppython3Parser)
 *  - 
 python3Parser_inheritance_return
      ppython3Parser->inheritance(ppython3Parser)
 *  - 
 python3Parser_classname_return
      ppython3Parser->classname(ppython3Parser)
 *  - 
 python3Parser_funcdef_return
      ppython3Parser->funcdef(ppython3Parser)
 *  - 
 python3Parser_parameters_return
      ppython3Parser->parameters(ppython3Parser)
 *  - 
 python3Parser_tfpdefassgn_return
      ppython3Parser->tfpdefassgn(ppython3Parser)
 *  - 
 python3Parser_tfpdef_return
      ppython3Parser->tfpdef(ppython3Parser)
 *  - 
 python3Parser_funcname_return
      ppython3Parser->funcname(ppython3Parser)
 *  - 
 python3Parser_decorator_return
      ppython3Parser->decorator(ppython3Parser)
 *  - 
 python3Parser_decorators_return
      ppython3Parser->decorators(ppython3Parser)
 *  - 
 python3Parser_stmt_return
      ppython3Parser->stmt(ppython3Parser)
 *  - 
 python3Parser_simple_stmt_return
      ppython3Parser->simple_stmt(ppython3Parser)
 *  - 
 python3Parser_small_stmt_return
      ppython3Parser->small_stmt(ppython3Parser)
 *  - 
 python3Parser_del_stmt_return
      ppython3Parser->del_stmt(ppython3Parser)
 *  - 
 python3Parser_pass_stmt_return
      ppython3Parser->pass_stmt(ppython3Parser)
 *  - 
 python3Parser_break_stmt_return
      ppython3Parser->break_stmt(ppython3Parser)
 *  - 
 python3Parser_continue_stmt_return
      ppython3Parser->continue_stmt(ppython3Parser)
 *  - 
 python3Parser_return_stmt_return
      ppython3Parser->return_stmt(ppython3Parser)
 *  - 
 python3Parser_raise_stmt_return
      ppython3Parser->raise_stmt(ppython3Parser)
 *  - 
 python3Parser_global_stmt_return
      ppython3Parser->global_stmt(ppython3Parser)
 *  - 
 python3Parser_nonlocal_stmt_return
      ppython3Parser->nonlocal_stmt(ppython3Parser)
 *  - 
 python3Parser_assert_stmt_return
      ppython3Parser->assert_stmt(ppython3Parser)
 *  - 
 python3Parser_yield_stmt_return
      ppython3Parser->yield_stmt(ppython3Parser)
 *  - 
 python3Parser_yield_expression_return
      ppython3Parser->yield_expression(ppython3Parser)
 *  - 
 python3Parser_import_stmt_return
      ppython3Parser->import_stmt(ppython3Parser)
 *  - 
 python3Parser_import_name_return
      ppython3Parser->import_name(ppython3Parser)
 *  - 
 python3Parser_import_from_return
      ppython3Parser->import_from(ppython3Parser)
 *  - 
 python3Parser_import_as_name_return
      ppython3Parser->import_as_name(ppython3Parser)
 *  - 
 python3Parser_dotted_as_name_return
      ppython3Parser->dotted_as_name(ppython3Parser)
 *  - 
 python3Parser_import_as_names_return
      ppython3Parser->import_as_names(ppython3Parser)
 *  - 
 python3Parser_dotted_as_names_return
      ppython3Parser->dotted_as_names(ppython3Parser)
 *  - 
 python3Parser_dotted_name_return
      ppython3Parser->dotted_name(ppython3Parser)
 *  - 
 python3Parser_compound_stmt_return
      ppython3Parser->compound_stmt(ppython3Parser)
 *  - 
 python3Parser_suite_return
      ppython3Parser->suite(ppython3Parser)
 *  - 
 python3Parser_if_stmt_return
      ppython3Parser->if_stmt(ppython3Parser)
 *  - 
 python3Parser_while_stmt_return
      ppython3Parser->while_stmt(ppython3Parser)
 *  - 
 python3Parser_for_stmt_return
      ppython3Parser->for_stmt(ppython3Parser)
 *  - 
 python3Parser_try_stmt_return
      ppython3Parser->try_stmt(ppython3Parser)
 *  - 
 python3Parser_try_closure_return
      ppython3Parser->try_closure(ppython3Parser)
 *  - 
 python3Parser_with_stmt_return
      ppython3Parser->with_stmt(ppython3Parser)
 *  - 
 python3Parser_with_item_return
      ppython3Parser->with_item(ppython3Parser)
 *  - 
 python3Parser_test_return
      ppython3Parser->test(ppython3Parser)
 *  - 
 python3Parser_test_nocond_return
      ppython3Parser->test_nocond(ppython3Parser)
 *  - 
 python3Parser_lambdef_return
      ppython3Parser->lambdef(ppython3Parser)
 *  - 
 python3Parser_lambdef_nocond_return
      ppython3Parser->lambdef_nocond(ppython3Parser)
 *  - 
 python3Parser_varargslist_return
      ppython3Parser->varargslist(ppython3Parser)
 *  - 
 python3Parser_vfpdefassgn_return
      ppython3Parser->vfpdefassgn(ppython3Parser)
 *  - 
 python3Parser_vfpdef_return
      ppython3Parser->vfpdef(ppython3Parser)
 *  - 
 python3Parser_or_test_return
      ppython3Parser->or_test(ppython3Parser)
 *  - 
 python3Parser_and_test_return
      ppython3Parser->and_test(ppython3Parser)
 *  - 
 python3Parser_not_test_return
      ppython3Parser->not_test(ppython3Parser)
 *  - 
 python3Parser_comparison_return
      ppython3Parser->comparison(ppython3Parser)
 *  - 
 python3Parser_comp_op_return
      ppython3Parser->comp_op(ppython3Parser)
 *  - 
 python3Parser_expr_stmt_return
      ppython3Parser->expr_stmt(ppython3Parser)
 *  - 
 python3Parser_augassign_return
      ppython3Parser->augassign(ppython3Parser)
 *  - 
 python3Parser_star_expr_return
      ppython3Parser->star_expr(ppython3Parser)
 *  - 
 python3Parser_expr_return
      ppython3Parser->expr(ppython3Parser)
 *  - 
 python3Parser_xor_expr_return
      ppython3Parser->xor_expr(ppython3Parser)
 *  - 
 python3Parser_and_expr_return
      ppython3Parser->and_expr(ppython3Parser)
 *  - 
 python3Parser_shift_expr_return
      ppython3Parser->shift_expr(ppython3Parser)
 *  - 
 python3Parser_arith_expr_return
      ppython3Parser->arith_expr(ppython3Parser)
 *  - 
 python3Parser_term_return
      ppython3Parser->term(ppython3Parser)
 *  - 
 python3Parser_factor_return
      ppython3Parser->factor(ppython3Parser)
 *  - 
 python3Parser_power_return
      ppython3Parser->power(ppython3Parser)
 *  - 
 python3Parser_atom_return
      ppython3Parser->atom(ppython3Parser)
 *  - 
 python3Parser_string_return
      ppython3Parser->string(ppython3Parser)
 *  - 
 python3Parser_number_return
      ppython3Parser->number(ppython3Parser)
 *  - 
 python3Parser_trailer_return
      ppython3Parser->trailer(ppython3Parser)
 *  - 
 python3Parser_subscriptlist_return
      ppython3Parser->subscriptlist(ppython3Parser)
 *  - 
 python3Parser_subscript_return
      ppython3Parser->subscript(ppython3Parser)
 *  - 
 python3Parser_sliceop_return
      ppython3Parser->sliceop(ppython3Parser)
 *  - 
 python3Parser_exprlist_return
      ppython3Parser->exprlist(ppython3Parser)
 *  - 
 python3Parser_testlist_return
      ppython3Parser->testlist(ppython3Parser)
 *  - 
 python3Parser_testlist_comp_return
      ppython3Parser->testlist_comp(ppython3Parser)
 *  - 
 python3Parser_dictorsetmaker_return
      ppython3Parser->dictorsetmaker(ppython3Parser)
 *  - 
 python3Parser_dictmakerclause_return
      ppython3Parser->dictmakerclause(ppython3Parser)
 *  - 
 python3Parser_setmakerclause_return
      ppython3Parser->setmakerclause(ppython3Parser)
 *  - 
 python3Parser_comp_iter_return
      ppython3Parser->comp_iter(ppython3Parser)
 *  - 
 python3Parser_comp_for_return
      ppython3Parser->comp_for(ppython3Parser)
 *  - 
 python3Parser_comp_if_return
      ppython3Parser->comp_if(ppython3Parser)
 *  - 
 python3Parser_arglist_return
      ppython3Parser->arglist(ppython3Parser)
 *  - 
 python3Parser_argument_return
      ppython3Parser->argument(ppython3Parser)
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 *
 * The return type for any particular rule is of course determined by the source
 * grammar file.
 */
// [The "BSD license"]
// Copyright (c) 2005-2009 Jim Idle, Temporal Wave LLC
// http://www.temporal-wave.com
// http://www.linkedin.com/in/jimidle
//
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. The name of the author may not be used to endorse or promote products
//    derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#ifndef	_python3Parser_H
#define _python3Parser_H
/* =============================================================================
 * Standard antlr3 C runtime definitions
 */
#include    <antlr3.h>

/* End of standard antlr 3 runtime definitions
 * =============================================================================
 */

#ifdef __cplusplus
extern "C" {
#endif

// Forward declare the context typedef so that we can use it before it is
// properly defined. Delegators and delegates (from import statements) are
// interdependent and their context structures contain pointers to each other
// C only allows such things to be declared if you pre-declare the typedef.
//
typedef struct python3Parser_Ctx_struct python3Parser, * ppython3Parser;



#ifdef	ANTLR3_WINDOWS
// Disable: Unreferenced parameter,							- Rules with parameters that are not used
//          constant conditional,							- ANTLR realizes that a prediction is always true (synpred usually)
//          initialized but unused variable					- tree rewrite variables declared but not needed
//          Unreferenced local variable						- lexer rule declares but does not always use _type
//          potentially unitialized variable used			- retval always returned from a rule
//			unreferenced local function has been removed	- susually getTokenNames or freeScope, they can go without warnigns
//
// These are only really displayed at warning level /W4 but that is the code ideal I am aiming at
// and the codegen must generate some of these warnings by necessity, apart from 4100, which is
// usually generated when a parser rule is given a parameter that it does not use. Mostly though
// this is a matter of orthogonality hence I disable that one.
//
#pragma warning( disable : 4100 )
#pragma warning( disable : 4101 )
#pragma warning( disable : 4127 )
#pragma warning( disable : 4189 )
#pragma warning( disable : 4505 )
#pragma warning( disable : 4701 )
#endif

/* ========================
 * BACKTRACKING IS ENABLED
 * ========================
 */

typedef struct python3Parser_interactive_input_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_interactive_input_return;



typedef struct python3Parser_file_input_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_file_input_return;



typedef struct python3Parser_eval_input_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_eval_input_return;



typedef struct python3Parser_classdef_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_classdef_return;



typedef struct python3Parser_inheritance_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_inheritance_return;



typedef struct python3Parser_classname_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_classname_return;



typedef struct python3Parser_funcdef_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_funcdef_return;



typedef struct python3Parser_parameters_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_parameters_return;



typedef struct python3Parser_tfpdefassgn_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_tfpdefassgn_return;



typedef struct python3Parser_tfpdef_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_tfpdef_return;



typedef struct python3Parser_funcname_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_funcname_return;



typedef struct python3Parser_decorator_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_decorator_return;



typedef struct python3Parser_decorators_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_decorators_return;



typedef struct python3Parser_stmt_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_stmt_return;



typedef struct python3Parser_simple_stmt_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_simple_stmt_return;



typedef struct python3Parser_small_stmt_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_small_stmt_return;



typedef struct python3Parser_del_stmt_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_del_stmt_return;



typedef struct python3Parser_pass_stmt_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_pass_stmt_return;



typedef struct python3Parser_break_stmt_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_break_stmt_return;



typedef struct python3Parser_continue_stmt_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_continue_stmt_return;



typedef struct python3Parser_return_stmt_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_return_stmt_return;



typedef struct python3Parser_raise_stmt_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_raise_stmt_return;



typedef struct python3Parser_global_stmt_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_global_stmt_return;



typedef struct python3Parser_nonlocal_stmt_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_nonlocal_stmt_return;



typedef struct python3Parser_assert_stmt_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_assert_stmt_return;



typedef struct python3Parser_yield_stmt_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_yield_stmt_return;



typedef struct python3Parser_yield_expression_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_yield_expression_return;



typedef struct python3Parser_import_stmt_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_import_stmt_return;



typedef struct python3Parser_import_name_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_import_name_return;



typedef struct python3Parser_import_from_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_import_from_return;



typedef struct python3Parser_import_as_name_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_import_as_name_return;



typedef struct python3Parser_dotted_as_name_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_dotted_as_name_return;



typedef struct python3Parser_import_as_names_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_import_as_names_return;



typedef struct python3Parser_dotted_as_names_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_dotted_as_names_return;



typedef struct python3Parser_dotted_name_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_dotted_name_return;



typedef struct python3Parser_compound_stmt_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_compound_stmt_return;



typedef struct python3Parser_suite_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_suite_return;



typedef struct python3Parser_if_stmt_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_if_stmt_return;



typedef struct python3Parser_while_stmt_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_while_stmt_return;



typedef struct python3Parser_for_stmt_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_for_stmt_return;



typedef struct python3Parser_try_stmt_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_try_stmt_return;



typedef struct python3Parser_try_closure_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_try_closure_return;



typedef struct python3Parser_with_stmt_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_with_stmt_return;



typedef struct python3Parser_with_item_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_with_item_return;



typedef struct python3Parser_test_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_test_return;



typedef struct python3Parser_test_nocond_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_test_nocond_return;



typedef struct python3Parser_lambdef_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_lambdef_return;



typedef struct python3Parser_lambdef_nocond_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_lambdef_nocond_return;



typedef struct python3Parser_varargslist_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_varargslist_return;



typedef struct python3Parser_vfpdefassgn_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_vfpdefassgn_return;



typedef struct python3Parser_vfpdef_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_vfpdef_return;



typedef struct python3Parser_or_test_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_or_test_return;



typedef struct python3Parser_and_test_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_and_test_return;



typedef struct python3Parser_not_test_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_not_test_return;



typedef struct python3Parser_comparison_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_comparison_return;



typedef struct python3Parser_comp_op_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_comp_op_return;



typedef struct python3Parser_expr_stmt_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_expr_stmt_return;



typedef struct python3Parser_augassign_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_augassign_return;



typedef struct python3Parser_star_expr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_star_expr_return;



typedef struct python3Parser_expr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_expr_return;



typedef struct python3Parser_xor_expr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_xor_expr_return;



typedef struct python3Parser_and_expr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_and_expr_return;



typedef struct python3Parser_shift_expr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_shift_expr_return;



typedef struct python3Parser_arith_expr_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_arith_expr_return;



typedef struct python3Parser_term_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_term_return;



typedef struct python3Parser_factor_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_factor_return;



typedef struct python3Parser_power_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_power_return;



typedef struct python3Parser_atom_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_atom_return;



typedef struct python3Parser_string_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_string_return;



typedef struct python3Parser_number_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_number_return;



typedef struct python3Parser_trailer_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_trailer_return;



typedef struct python3Parser_subscriptlist_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_subscriptlist_return;



typedef struct python3Parser_subscript_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_subscript_return;



typedef struct python3Parser_sliceop_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_sliceop_return;



typedef struct python3Parser_exprlist_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_exprlist_return;



typedef struct python3Parser_testlist_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_testlist_return;



typedef struct python3Parser_testlist_comp_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_testlist_comp_return;



typedef struct python3Parser_dictorsetmaker_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_dictorsetmaker_return;



typedef struct python3Parser_dictmakerclause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_dictmakerclause_return;



typedef struct python3Parser_setmakerclause_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_setmakerclause_return;



typedef struct python3Parser_comp_iter_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_comp_iter_return;



typedef struct python3Parser_comp_for_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_comp_for_return;



typedef struct python3Parser_comp_if_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_comp_if_return;



typedef struct python3Parser_arglist_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_arglist_return;



typedef struct python3Parser_argument_return_struct
{
    /** Generic return elements for ANTLR3 rules that are not in tree parsers or returning trees
     */
    pANTLR3_COMMON_TOKEN    start;
    pANTLR3_COMMON_TOKEN    stop;
    pANTLR3_BASE_TREE	tree;

}
    python3Parser_argument_return;




/** Context tracking structure for 
python3Parser

 */
struct python3Parser_Ctx_struct
{
    /** Built in ANTLR3 context tracker contains all the generic elements
     *  required for context tracking.
     */
    pANTLR3_PARSER   pParser;

     python3Parser_interactive_input_return
     (*interactive_input)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_file_input_return
     (*file_input)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_eval_input_return
     (*eval_input)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_classdef_return
     (*classdef)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_inheritance_return
     (*inheritance)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_classname_return
     (*classname)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_funcdef_return
     (*funcdef)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_parameters_return
     (*parameters)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_tfpdefassgn_return
     (*tfpdefassgn)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_tfpdef_return
     (*tfpdef)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_funcname_return
     (*funcname)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_decorator_return
     (*decorator)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_decorators_return
     (*decorators)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_stmt_return
     (*stmt)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_simple_stmt_return
     (*simple_stmt)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_small_stmt_return
     (*small_stmt)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_del_stmt_return
     (*del_stmt)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_pass_stmt_return
     (*pass_stmt)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_break_stmt_return
     (*break_stmt)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_continue_stmt_return
     (*continue_stmt)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_return_stmt_return
     (*return_stmt)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_raise_stmt_return
     (*raise_stmt)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_global_stmt_return
     (*global_stmt)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_nonlocal_stmt_return
     (*nonlocal_stmt)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_assert_stmt_return
     (*assert_stmt)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_yield_stmt_return
     (*yield_stmt)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_yield_expression_return
     (*yield_expression)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_import_stmt_return
     (*import_stmt)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_import_name_return
     (*import_name)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_import_from_return
     (*import_from)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_import_as_name_return
     (*import_as_name)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_dotted_as_name_return
     (*dotted_as_name)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_import_as_names_return
     (*import_as_names)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_dotted_as_names_return
     (*dotted_as_names)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_dotted_name_return
     (*dotted_name)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_compound_stmt_return
     (*compound_stmt)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_suite_return
     (*suite)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_if_stmt_return
     (*if_stmt)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_while_stmt_return
     (*while_stmt)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_for_stmt_return
     (*for_stmt)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_try_stmt_return
     (*try_stmt)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_try_closure_return
     (*try_closure)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_with_stmt_return
     (*with_stmt)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_with_item_return
     (*with_item)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_test_return
     (*test)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_test_nocond_return
     (*test_nocond)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_lambdef_return
     (*lambdef)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_lambdef_nocond_return
     (*lambdef_nocond)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_varargslist_return
     (*varargslist)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_vfpdefassgn_return
     (*vfpdefassgn)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_vfpdef_return
     (*vfpdef)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_or_test_return
     (*or_test)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_and_test_return
     (*and_test)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_not_test_return
     (*not_test)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_comparison_return
     (*comparison)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_comp_op_return
     (*comp_op)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_expr_stmt_return
     (*expr_stmt)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_augassign_return
     (*augassign)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_star_expr_return
     (*star_expr)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_expr_return
     (*expr)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_xor_expr_return
     (*xor_expr)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_and_expr_return
     (*and_expr)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_shift_expr_return
     (*shift_expr)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_arith_expr_return
     (*arith_expr)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_term_return
     (*term)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_factor_return
     (*factor)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_power_return
     (*power)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_atom_return
     (*atom)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_string_return
     (*string)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_number_return
     (*number)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_trailer_return
     (*trailer)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_subscriptlist_return
     (*subscriptlist)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_subscript_return
     (*subscript)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_sliceop_return
     (*sliceop)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_exprlist_return
     (*exprlist)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_testlist_return
     (*testlist)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_testlist_comp_return
     (*testlist_comp)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_dictorsetmaker_return
     (*dictorsetmaker)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_dictmakerclause_return
     (*dictmakerclause)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_setmakerclause_return
     (*setmakerclause)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_comp_iter_return
     (*comp_iter)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_comp_for_return
     (*comp_for)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_comp_if_return
     (*comp_if)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_arglist_return
     (*arglist)	(struct python3Parser_Ctx_struct * ctx);

     python3Parser_argument_return
     (*argument)	(struct python3Parser_Ctx_struct * ctx);

     ANTLR3_BOOLEAN
     (*synpred9_python3)	(struct python3Parser_Ctx_struct * ctx);

     ANTLR3_BOOLEAN
     (*synpred18_python3)	(struct python3Parser_Ctx_struct * ctx);

     ANTLR3_BOOLEAN
     (*synpred23_python3)	(struct python3Parser_Ctx_struct * ctx);

     ANTLR3_BOOLEAN
     (*synpred64_python3)	(struct python3Parser_Ctx_struct * ctx);

     ANTLR3_BOOLEAN
     (*synpred89_python3)	(struct python3Parser_Ctx_struct * ctx);

     ANTLR3_BOOLEAN
     (*synpred156_python3)	(struct python3Parser_Ctx_struct * ctx);

     ANTLR3_BOOLEAN
     (*synpred185_python3)	(struct python3Parser_Ctx_struct * ctx);

     ANTLR3_BOOLEAN
     (*synpred187_python3)	(struct python3Parser_Ctx_struct * ctx);

     ANTLR3_BOOLEAN
     (*synpred190_python3)	(struct python3Parser_Ctx_struct * ctx);
    // Delegated rules

    const char * (*getGrammarFileName)();
    void            (*reset)  (struct python3Parser_Ctx_struct * ctx);
    void	    (*free)   (struct python3Parser_Ctx_struct * ctx);
/* @headerFile.members() */
pANTLR3_BASE_TREE_ADAPTOR	adaptor;
pANTLR3_VECTOR_FACTORY		vectors;
/* End @headerFile.members() */
};

// Function protoypes for the constructor functions that external translation units
// such as delegators and delegates may wish to call.
//
ANTLR3_API ppython3Parser python3ParserNew         (
pANTLR3_COMMON_TOKEN_STREAM
 instream);
ANTLR3_API ppython3Parser python3ParserNewSSD      (
pANTLR3_COMMON_TOKEN_STREAM
 instream, pANTLR3_RECOGNIZER_SHARED_STATE state);

/** Symbolic definitions of all the tokens that the 
parser
 will work with.
 * \{
 *
 * Antlr will define EOF, but we can't use that as it it is too common in
 * in C header files and that would be confusing. There is no way to filter this out at the moment
 * so we just undef it here for now. That isn't the value we get back from C recognizers
 * anyway. We are looking for ANTLR3_TOKEN_EOF.
 */
#ifdef	EOF
#undef	EOF
#endif
#ifdef	Tokens
#undef	Tokens
#endif
#define EOF      -1
#define T__118      118
#define AMPERSAND      4
#define AMPERSANDEQUAL      5
#define AND      6
#define AS      7
#define ASSERT      8
#define ASSIGN      9
#define AT      10
#define BINDIGIT      11
#define BININTEGER      12
#define BREAK      13
#define BYTESLITERAL      14
#define BYTESPREFIX      15
#define CIRCUMFLEX      16
#define CIRCUMFLEXEQUAL      17
#define CLASS      18
#define COLON      19
#define COMMA      20
#define COMMENT      21
#define CONTINUE      22
#define CONTINUED_LINE      23
#define DECIMALINTEGER      24
#define DEDENT      25
#define DEF      26
#define DEL      27
#define DIGIT      28
#define DOT      29
#define DOUBLESLASH      30
#define DOUBLESLASHEQUAL      31
#define DOUBLESTAR      32
#define DOUBLESTAREQUAL      33
#define ELIF      34
#define ELSE      35
#define EQUAL      36
#define ESCAPESEQ      37
#define EXCEPT      38
#define EXPONENT      39
#define EXPONENTFLOAT      40
#define FALSE      41
#define FINALLY      42
#define FLOATNUMBER      43
#define FOR      44
#define FRACTION      45
#define FROM      46
#define GLOBAL      47
#define GREATER      48
#define GREATEREQUAL      49
#define HEXDIGIT      50
#define HEXINTEGER      51
#define IDENTIFIER      52
#define ID_CONTINUE      53
#define ID_START      54
#define IF      55
#define IMAGNUMBER      56
#define IMPORT      57
#define IN      58
#define INDENT      59
#define INTEGER      60
#define INTPART      61
#define IS      62
#define LAMBDA      63
#define LBRACK      64
#define LCURLY      65
#define LEADING_WS      66
#define LEFTSHIFT      67
#define LEFTSHIFTEQUAL      68
#define LESS      69
#define LESSEQUAL      70
#define LONGBYTES      71
#define LONGSTRING      72
#define LPAREN      73
#define MINUS      74
#define MINUSEQUAL      75
#define NEWLINE      76
#define NONE      77
#define NONLOCAL      78
#define NONZERODIGIT      79
#define NOT      80
#define NOTEQUAL      81
#define OCTDIGIT      82
#define OCTINTEGER      83
#define OR      84
#define PASS      85
#define PERCENT      86
#define PERCENTEQUAL      87
#define PLUS      88
#define PLUSEQUAL      89
#define POINTFLOAT      90
#define RAISE      91
#define RBRACK      92
#define RCURLY      93
#define RETURN      94
#define RIGHTSHIFT      95
#define RIGHTSHIFTEQUAL      96
#define RPAREN      97
#define SEMI      98
#define SHORTBYTES      99
#define SHORTSTRING      100
#define SLASH      101
#define SLASHEQUAL      102
#define STAR      103
#define STAREQUAL      104
#define STRINGLITERAL      105
#define STRINGPREFIX      106
#define TILDE      107
#define TRIAPOS      108
#define TRIQUOTE      109
#define TRUE      110
#define TRY      111
#define VBAR      112
#define VBAREQUAL      113
#define WHILE      114
#define WITH      115
#define WS      116
#define YIELD      117
#ifdef	EOF
#undef	EOF
#define	EOF	ANTLR3_TOKEN_EOF
#endif

#ifndef TOKENSOURCE
#define TOKENSOURCE(lxr) lxr->pLexer->rec->state->tokSource
#endif

/* End of token definitions for python3Parser
 * =============================================================================
 */
/** } */

#ifdef __cplusplus
}
#endif

#endif

/* END - Note:Keep extra line feed to satisfy UNIX systems */
